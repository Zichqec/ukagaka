*
{
	font-family: 'Calibri', sans-serif;
	color: #222020;
}

a
{
    
    color: #7b2dbb;
    text-decoration: None;
	font-weight: bold;
}

h1
{
	text-align: center;
	font-size: 24px;
}

h2
{
	font-size: 22px;
}

p
{
	font-size: 15px;
}

img
{
	max-width: 100%;
	max-height: 100%;
}

.centerimg
{
	display: block;
	margin-left: auto;
	margin-right: auto;
}

.leftimg
{
	float: left;
}

img.indeximg
{
	
	
}

.indeximg
{
	position: relative;
	bottom: 0;
	margin-left: auto;
	margin-right: auto;
	display: flex;
	align-self: flex-end;
}

.indexbox
{
	width: 300px;
	min-width: 300px;
	float: right;
	position: relative;
	display: flex;
	padding-left: 5px;
}

/*
.indexbox
{
	width: 25%;
	height: auto;
	padding: 5px;
	position: relative;
	bottom: 0;
	align-self: flex-end;
	justify-content: center;
	display: flex;
}*/
 

.container_text
{
	width: 75%;
}

.container_box
{
	display: flex;
	overflow: hidden;
}

/*
#quick_index
{
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
}

#quick_index > a
{
	width: 20%;
	margin: 10px;
	text-align: center;
	font-size: 14px;
}
*/

#quick_index
{
	-webkit-column-count: 3;
	   -moz-column-count: 3;
			column-count: 3;
}

#quick_index > .index_link
{
	font-size: 14px;
	/* https://stackoverflow.com/questions/7785374/how-to-prevent-column-break-within-an-element */
	overflow: hidden; /* fix for Firefox */
	break-inside: avoid-column;
	-webkit-column-break-inside: avoid;
}

@media screen and (max-width: 600px)
{
	.indexbox
	{
		width: 100%;
		padding-left: 0px;
	}
	.container_box
	{
		display: block;
	}
	.container_text
	{
		width: 100%;
	}
	
	#quick_index
	{
		-webkit-column-count: auto;
		   -moz-column-count: auto;
				column-count: auto;
	}
}

@media screen and (max-width: 350px)
{
	.indeximg
	{
		max-width: 100%;
		max-height: 100%;
		margin-left: 0;
	}
	.indexbox
	{
		float: none;
	}
}

.floatclear
{
	clear: both;
}

.balloonlist
{
	margin: auto;
	padding: 5px;
}

.balloonlisting
{
	float: left;
	max-width: 620px;
	margin-left: 2px;
	margin-right: 3px;
}

.to_top
{
	float: right;
	font-size: 14px;
}

article
{
	background: #ebebeb;
	border-radius: 10px;
	padding: 20px;
	max-width: 1250px;
	margin: auto;
	margin-top: 5px;
	/*opacity: 0.9;*/
}

.shell_box
{
	background: #dedede;
	border-radius: 10px;
	padding: 10px;
	margin-top: 5px;
}

footer
{
	background: #ebebeb;
	border-radius: 10px;
	padding: 3px 20px 3px 20px;
	max-width: 1250px;
	text-align: center;
	margin: auto;
	margin-top: 5px;
}

.footertext
{
	/* This margin is here to make the box not too tall because of the <p> element, but also not too narrow by having no margin at all */
	margin-top: 3px;
	margin-bottom: 3px;
}

body
{
    background: #381f4d;
	/*background-image: url("bg.png");*/
	/* margin is here because I want it to apply to everything, and I can't just apply it to the articles because they need the margin auto to be centered */
	margin-left: 2%;
	margin-right: 2%;
}

.space_mode {
	background-image: url("bg.png");
}

.space_mode_toggle
{
	float: right;
}

.space_mode_button
{
	padding-top: 2px;
	border: none;
	background: #ebebeb;
}

img.space_mode_img
{
	max-height: 32px;
}

nav
{
	position: relative;
}

/* Navbar container */
.navbar
{
	border-radius: 10px;
	background: #ebebeb;
	overflow: hidden;
	max-width: 1250px;
	margin: auto;
	padding: 0px 20px 0px 20px;
}

.navbar a
{
	float: left;
	font-size: 16px;
	color: #000000;
	text-align: center;
	padding: 10px;
	font-weight: normal;
	
	display: block; /*???*/
}

/* The dropdown container */
.dropdown
{
  float: left;
  overflow: hidden;
}

.dropdown .dropbtn
{
	font-size: 16px;
	border: none;
	outline: none;
	color: #000000;
	background-color: inherit;
	font-family: inherit; /* Important for vertical align on mobile phones */
	margin: 0; /* Important for vertical align on mobile phones */
	padding: 10px;
	text-decoration: none;
	font-weight: normal;
}

.navbar a:hover, .dropdown:hover
{
	background-color: #b6b5b6;
}

/* Dropdown content (hidden by default) */
.dropdown-content
{
	display: none;
	position: absolute;
	background-color: #ebebeb;
	min-width: 160px;
	box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.4);
	border-radius: 2px;
	z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content a
{
	float: none;
	padding-left: 10px;
	padding-right: 10px;
	text-decoration: none;
	display: block;
	text-align: left;
	padding-top: 10px;
	padding-bottom: 10px;
}

/* Add a grey background color to dropdown links on hover */
.dropdown-content a:hover
{
  background-color: #b6b5b6;
}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content
{
	display: block;
}

#download
{
	display: block;
	text-align: center;
}

.dl_button
{
	background-color: #d1d1d1;
	border-radius: 5px;
	padding: 5px 15px 5px 15px;
}

.dl_button:hover
{
	background-color: #b6b6b6;
}

/* Style the tab */
.tab {
	overflow: hidden;
	background-color: #d1d1d1;
	border-radius: 5px;
	display: inline-block;
}

/* Style the buttons that are used to open the tab content */
.tab button {
	background-color: inherit;
	border: none;
	outline: none;
	cursor: pointer;
	padding: 5px;
	vertical-align: middle;
}

/* Change background color of buttons on hover */
.tab button:hover {
	background-color: #b6b6b6;
}

/* Create an active/current tablink class */
.tab button.active {
	background-color: #b6b6b6;
}

/* Style the tab content */
.tabcontent {
	display: none;
	/*border-top: none;*/
}

/* Style the button that is used to open and close the collapsible content */
.collapsible {
	background-color: #d1d1d1;
	cursor: pointer;
	padding: 5px;
	border: none;
	text-align: left;
	outline: none;
	display: inline-block;
	border-radius: 5px;
}

/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
.active, .collapsible:hover {
	background-color: #b6b6b6;
}

/* Style the collapsible content. Note: hidden by default */
.content {
	margin-top: 3px;
	padding: 0 10px;
	display: none;
	overflow: hidden;
	background-color: #d1d1d1;
	border-radius: 5px;
}

pre
{
	white-space: pre-wrap;
	width: 99%;
	overflow: auto;
	padding: 0;
	margin: 0;
	background: #d1d1d1;
	font-family: 'Courier New', monospace;
	font-size: 12px;
}

.back_to_top
{
	font-size: 14px;
}

/* Using this in the np++ guide. I may need to change this if I ever try to implement syntax highlighting again? */
code
{
	background: #d1d1d1;
	font-family: 'Courier New', monospace;
}